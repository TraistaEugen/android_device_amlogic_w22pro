--- libavcodec/h264.c
+++ libavcodec/h264.c
@@ -1791,7 +1791,7 @@
     int *block_offset = &h->block_offset[0];
     const int transform_bypass = !simple && (s->qscale == 0 && h->sps.transform_bypass);
     /* is_h264 should always be true if SVQ3 is disabled. */
-    const int is_h264 = !CONFIG_SVQ3_DECODER || simple || s->codec_id == CODEC_ID_H264;
+    const int is_h264 = !CONFIG_SVQ3_DECODER || simple || s->codec_id == CODEC_ID_H264  || s->codec_id == CODEC_ID_H264MVC;
     void (*idct_add)(uint8_t *dst, DCTELEM *block, int stride);
 
     dest_y  = s->current_picture.data[0] + ((mb_x << pixel_shift) + mb_y * s->linesize  ) * 16;
@@ -3384,7 +3384,7 @@
 
     s->mb_skip_run= -1;
 
-    h->is_complex = FRAME_MBAFF || s->picture_structure != PICT_FRAME || s->codec_id != CODEC_ID_H264 ||
+    h->is_complex = FRAME_MBAFF || s->picture_structure != PICT_FRAME || s->codec_id != CODEC_ID_H264 || s->codec_id != CODEC_ID_H264MVC ||
                     (CONFIG_GRAY && (s->flags&CODEC_FLAG_GRAY));
 
     if( h->pps.cabac ) {
@@ -3820,6 +3820,12 @@
         case NAL_SPS_EXT:
         case NAL_AUXILIARY_SLICE:
             break;
+		case NAL_14:
+		case NAL_15:
+		case NAL_20:
+			av_log(avctx, AV_LOG_ERROR, "NAL type: %d for MVC\n", h->nal_unit_type);
+			avctx->codec_id == CODEC_ID_H264MVC;
+			break;			
         default:
             av_log(avctx, AV_LOG_DEBUG, "Unknown NAL code: %d (%d bits)\n", hx->nal_unit_type, bit_length);
         }
